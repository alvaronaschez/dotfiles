# Default config for sway
# Originally placed in /etc/sway/config
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.
#
### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# lock and screen-off timeouts
#set $lock_timeout ((2*60))
#set $screen_off_timeout ((3*60))
set $lock_timeout ((10*60))
set $screen_off_timeout ((15*60))

# Your preferred terminal emulator
set $term foot
# set $term sakura

set $browser google-chrome
# set $browser qutebrowser
# set $browser vieb

default_border pixel 2

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
# set $menu wofi --show run | xargs swaymsg exec
# set $menu wofi -n --show run | xargs swaymsg exec
# set $menu printf $options | wofi --show dmenu -n | xargs swaymsg exec
set $menu tofi-run | xargs swaymsg exec --
# set $menu bemenu-run -b | xargs swaymsg exec --
# set $options "vieb\nqutebrowser\ngoogle-chrome\nfirefox\nblueman-manager\npavucontrol\nnm-connection-editor\nwdisplays\nevince\nmpv"
# set $menu echo $options | bemenu | xargs swaymsg exec --

include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/Documents/backgrounds/sway/)
#output * bg /usr/share/Documents/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
# set $bgimg "~/Documents/backgrounds/japanese.jpg"
set $bgimg "~/Documents/backgrounds/vimref.jpg"
set $lockimg "~/Documents/backgrounds/deb1.png"
output * bg $bgimg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
set $laptop_screen eDP-1
set $external_monitor DP-2
output $laptop_screen pos 0 1080 res 1920x1200
output $external_monitor pos 0 0 res 1920x1080
focus output $external_monitor
# clamshell mode
bindswitch --reload --locked lid:on output $laptop_screen disable
bindswitch --reload --locked lid:off output $laptop_screen enable
# workspaces
workspace 0 output $laptop_screen
workspace 1 output $external_monitor
# workspace 2 output $external_monitor
# workspace 3 output $external_monitor
# exec swaymsg "workspace 2; exec $browser"
exec swaymsg "workspace 1; exec $term tmux"


### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout $lock_timeout 'swaylock -fFe -i $lockimg' \
         timeout $screen_off_timeout 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -fFe -c 000000'
#
# This will lock your screen after 2 minutes of inactivity, then turn off
# your displays after another 1 minute, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "type:keyboard" {
    xkb_layout us
    xkb_variant altgr-intl
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec $term tmux

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    # bindsym --release Super_L exec $menu
    bindsym $mod+d exec $menu

    # lock screen
    bindsym $mod+Escape exec 'swaylock -fFe -i $lockimg'

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    ## Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    ## Or use $mod+[up|down|left|right]
    # bindsym $mod+Left focus left
    # bindsym $mod+Down focus down
    # bindsym $mod+Up focus up
    # bindsym $mod+Right focus right

    ## Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    ## Ditto, with arrow keys
    # bindsym $mod+Shift+Left move left
    # bindsym $mod+Shift+Down move down
    # bindsym $mod+Shift+Up move up
    # bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    ## Switch to workspace
    bindsym $mod+0 workspace number 0
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    ## Move focused container to workspace
    bindsym $mod+Shift+0 move container to workspace number 0
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    ## Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    # swaybar_command waybar
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%a %Y-%m-%d %I:%M:%S %p'; do sleep 1; done
    status_command while ~/.config/sway/status.zsh; do sleep 1; done
    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}


include /etc/sway/config.d/*

# --locked flags allow the buttons to be used whilst the screen is locked.

# sound
## sudo apt-get install pamixer
bindsym --locked XF86AudioRaiseVolume exec pamixer -i 5
# pamixer automatically prevents you from increasing the volume over 100%
#bindsym --locked XF86AudioLowerVolume exec pamixer -d 5
#bindsym --locked XF86AudioMute exec pamixer -t
## sudo apt-get install pulseaudio-utils
#bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
## sudo apt-get install pavucontrol

# brightness
bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+

